* {
    margin: 0;
    padding: 0;
}

$size: 20px !default;

$colors: (
    "o": transparent,
    "b": black,
    "g": green,
    "w": white,
);

$matrix: (
    (o o o o b b b b b b b b o o o o) 
    (o o o b b w w g g w w b b o o o) 
    (o o b b w w w g g w w w b b o o)
    (o b b g w w g g g g w w g b b o) 
    (o b w g g g g g g g g g g w b o) 
    (b b w w g g w w w w g g w w b b)
    (b w w w g w w w w w w g w w w b) 
    (b w w w g w w w w w w g w w w b) 
    (b w w g g w w w w w w g g w w b)
    (b g g g g g w w w w g g g g g b) 
    (b g g b b b b b b b b b b g g b) 
    (b b b b w w b w w b w w b b b b)
    (o b b w w w b w w b w w w b b o) 
    (o o b w w w w w w w w w w b o o) 
    (o o b b w w w w w w w w b b o o)
    (o o o b b b b b b b b b b o o o)
);


@function pixelize($matrix, $size) {
    $shadow: "";
    $rows: length($matrix);

    @for $row from 1 through $rows {
        $row-num: nth($matrix, $row);

        @for $col from 1 through length($row-num) {
            $dot: nth($row-num, $col);

            $shadow: $shadow + ($size * $col)+" "+ ($size * $row)+" " + map-get($colors, $dot);

            @if not($col == length($row-num) and $row == $rows) {
                $shadow: $shadow + ",";
            }
        }
    }

    @return unquote($shadow);
}

body {
    background: rgb(197, 255, 207);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.oneup {
    width: $size * length($matrix);
    height: $size * length($matrix);
    position: relative;

    &::after {
        width: $size;
        height: $size;
        content: "";
        position: absolute;
        box-shadow: pixelize($matrix, $size);
    }
}
